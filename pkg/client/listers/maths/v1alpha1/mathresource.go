/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "math-controller/pkg/apis/maths/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MathResourceLister helps list MathResources.
// All objects returned here must be treated as read-only.
type MathResourceLister interface {
	// List lists all MathResources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MathResource, err error)
	// MathResources returns an object that can list and get MathResources.
	MathResources(namespace string) MathResourceNamespaceLister
	MathResourceListerExpansion
}

// mathResourceLister implements the MathResourceLister interface.
type mathResourceLister struct {
	indexer cache.Indexer
}

// NewMathResourceLister returns a new MathResourceLister.
func NewMathResourceLister(indexer cache.Indexer) MathResourceLister {
	return &mathResourceLister{indexer: indexer}
}

// List lists all MathResources in the indexer.
func (s *mathResourceLister) List(selector labels.Selector) (ret []*v1alpha1.MathResource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MathResource))
	})
	return ret, err
}

// MathResources returns an object that can list and get MathResources.
func (s *mathResourceLister) MathResources(namespace string) MathResourceNamespaceLister {
	return mathResourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MathResourceNamespaceLister helps list and get MathResources.
// All objects returned here must be treated as read-only.
type MathResourceNamespaceLister interface {
	// List lists all MathResources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MathResource, err error)
	// Get retrieves the MathResource from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MathResource, error)
	MathResourceNamespaceListerExpansion
}

// mathResourceNamespaceLister implements the MathResourceNamespaceLister
// interface.
type mathResourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MathResources in the indexer for a given namespace.
func (s mathResourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MathResource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MathResource))
	})
	return ret, err
}

// Get retrieves the MathResource from the indexer for a given namespace and name.
func (s mathResourceNamespaceLister) Get(name string) (*v1alpha1.MathResource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("mathresource"), name)
	}
	return obj.(*v1alpha1.MathResource), nil
}
